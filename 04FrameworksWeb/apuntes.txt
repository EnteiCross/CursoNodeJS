
Framework web más importante de Node.JS es Express
Express es un framework para aplicaciones web.

Un Framework es un marco de herramientas diseñado para apoyar el desarrollo
de sitios dinámicos, aplicaciones y servicios web.

Principales frameworks para Node.js
    • Express
    • Sails
    • Hapi
    • Locomotive
    • Koa
    • Kraken
    • Express.io
    • SocketStream
    • Geddy
    • Total.js
    • Partial
    • Flatiron

Express es estrictamente un microframework de servicios web.
    • Sencillo, flexible y minimalista.
    • Muy popular.
    • Se adapta a la filosofía de Node.
    • Es muy similar a Sinatra, Sylex, Flask, SPark, etc.

Express nos ayudara con:
    • Rutas
    • Parámetros
    • Formularios y subidas de ficheros
    • Cookies
    • Sesiones
    • Templates

Express no nos ayudara con:
    • Base de datos / ORM
    • Autenticación de usuarios
    • Seguridad
    • Migraciones
    • Deploment
    • Organización del código

Concretamente Express:
    • Trabaja sobre el módulo http del core de Node.js
    • Procesa la petición a través de middlewares:
        ► Asocia las rutas a los manejadores
        ► Procesa los objetos req y res
        ► Visualiza los Templates
    • Nosotros escogeremos qué middlewares queremos usar, y en qué orden.
        ► Middleware es código que se ejecuta entre la petición del usuario y la respuesta del servidor.


Se debe instalar el módulo de express de mánera global, con "npm i express -g".


Se instalaran los módulos cookie-parser y cookie-session para hacer un contador de visitas con middlewares.
Se crea un contador valiendose del uso de las cookies.

Middleware
    Son módulos "plug and play" que se pueden apilar arbitrariamente en cualquier orden y proveen
    cierta funcionalidad, se dividen en Filtros y Proveedores.
    Filtros: Procesan tráfico entrante/saliente, pero no responden a ninguna petición. Por ejemplo bodyParser.
    Proveedores: Ofrecen respuestas automáticas a algún tipo de petición. Por ejemplo static.

Escribir middlewares en express:
• Una función que recibe 3 parámetros: req, res, next.
• Al terminar su tarea, tiene que invocar a next():
    - Sin parámetro: Se invoca al siguiente middleware del stack de middlewares.
    - Con parámetro: Se cambia la ruta a lo que se pase como parámetro.
• Dos maneras de activar middlewares:
    - Globalmente (app.use), activos para toda la app.
    - Locales para ciertas rutas.


Express se ayuda de paquetes adicionales, para mantener su core simple y minimalista.

Existe un generador de proyecto para Express llamado Express-Generator, el cual es un módulo de Node.js
con el comando express nombreDelProyecto, genera un proyecto con directorios y ficheros ordenados listos
para utilizarse.

Templates Engines
Express tiene un mecanismo para renderizar plantillas HTML.
para llamar a un template engine es con la siguiente instrucción:
    • res.render(view, [locals], callback)
        ► view: Ruta del template.
        ► locals: Valores a interpolar
        ► callbacks: function(err, html) {...}

Existen multiples templates engines como:
    • Jade          • Handlebars    • Underscore.js
    • EJS           • doT.js        • Pug
    • Mustache      • Nunjucks      • Hogan.js
    • Swig          • 